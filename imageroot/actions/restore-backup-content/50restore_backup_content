#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import os
import subprocess
import agent
import atexit

request = json.load(sys.stdin)

# Temporary path for restore. It is relative to Dovecot's vmail dir, the
# default working directory for the dovecot container:
tmp_restore_path = ".restore-backup-content." + os.environ["AGENT_TASK_ID"]
# Transform the folder path into a filesystem directory name:
_, maildir_path = subprocess.check_output([
    'podman', 'exec', 'dovecot',
    'doveadm', 'mailbox', 'path', '-u', request['user'], request['folder'],
], text=True).strip().rsplit('/', 1)
maildir_path_goescaped = maildir_path.replace("\\", "\\\\")
restic_args = [
    "restore",
    f"{request['snapshot']}:volumes/dovecot-data/{request['user']}/Maildir",
    f"--target=/srv/volumes/dovecot-data/{tmp_restore_path}",
    f"--include={maildir_path_goescaped}*",
]
podman_args = ["--workdir=/srv"] + agent.agent.get_state_volume_args()

def cleanup_tmp():
    global tmp_restore_path
    if tmp_restore_path:
        agent.run_helper("podman", "exec", "dovecot", "rm", "-rf", tmp_restore_path)
atexit.register(cleanup_tmp)

proc_restore = agent.run_restic(agent.redis_connect(), request["destination"], request["repopath"], podman_args, restic_args, stdout=sys.stderr)
if proc_restore.returncode != 0:
    print(agent.SD_ERR + f"Restic restore command failed with exit code {proc_restore.returncode}.", file=sys.stderr)
    sys.exit(1)

# 1. Disable the user quota temporarily.
# 2. Move the restored content under "Restored content" IMAP folder.
#    Remove the destination if already exists.
# 3. Reindex the destination folder.
# 4. Restore the previous quota setting, if possible
quota_disabled = False

proc_import = subprocess.run(["podman", "exec", "-i", "dovecot",
    "restore-folder", request["user"], f"/var/lib/vmail/{tmp_restore_path}", request['folder']],
    stdout=subprocess.PIPE, text=True)
if proc_import.returncode != 0:
    print(agent.SD_ERR + f"Import script failed with exit code {proc_import.returncode}.", file=sys.stderr)
    sys.exit(1)

if 'QUOTA_DISABLED_BY_RESTORE' in proc_import.stdout:
    quota_disabled = True

json.dump({
    "request": request,
    "quota_disabled": quota_disabled,
}, fp=sys.stdout)
