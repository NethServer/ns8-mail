#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import json
import os
import agent

request = json.load(sys.stdin)
renv = request['environment']

configure_retval = agent.tasks.run(agent_id=os.environ['AGENT_ID'], action='configure-module', data={
    "user_domain": renv["POSTFIX_ORIGIN"],
    "hostname": renv["MAIL_HOSTNAME"],
})
agent.assert_exp(configure_retval['exit_code'] == 0, "The configure-module subtask failed!")

settings_retval = agent.tasks.run(agent_id=os.environ['AGENT_ID'], action='set-mailbox-settings', data={
    "spam_retention": {
        "value": int(renv.get("DOVECOT_SPAM_RETENTION", "15"))
    },
    "spam_folder": {
        "enabled": bool(renv.get("DOVECOT_SPAM_FOLDER", "")),
        "name": renv.get("DOVECOT_SPAM_FOLDER", "Junk")
    },
    "quota": {
        "limit": int(renv.get("DOVECOT_QUOTA_MB", "0"))
    }
})
agent.assert_exp(settings_retval['exit_code'] == 0, "The set-mailbox-settings subtask failed!")

def unit_was_enabled(unit, fallback=True):
    """Check the backup set if the given Systemd unit was enabled"""
    try:
        # Check if file contents are equal to "enabled":
        with open(f'{unit}.is-enabled') as ufh:
            return ufh.read().strip() == "enabled"
        # Expect .is-enabled file is removed on the next backup procedure run
    except:
        return fallback

# Restore antivirus configuration state
filter_retval =  agent.tasks.run(agent_id=os.environ['AGENT_ID'], action='set-filter-configuration', data={
    "antivirus": {
        "enabled": unit_was_enabled('clamav.service', True),
        "clamav_official_sigs": unit_was_enabled('freshclam.timer', False),
        "third_party_sigs_rating": renv.get('CLAMAV_CUS_RATING', "MEDIUM").lower(),
    },
    # - custom antispam thresholds are stored in rspamd-data volume
    # - antispam state and greylist switches state are in the environment from 06copyenv
})
agent.assert_exp(filter_retval['exit_code'] == 0, "The set-filter-configuration subtask failed!")
