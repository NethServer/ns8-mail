#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import mail
from sqlite3 import OperationalError

mail.abort_with_json_if_not_configured([])

sdb = mail.pcdb_connect(readonly=True)

relays = []
has_wildcard =  False
try:
    for row in sdb.execute("""SELECT sender, dest,  host, port, tls, username, password, enabled, rdesc FROM relayrules"""):
        if row['sender'] is not None:
            sender = row['sender']
            relays.append({
                'sender': row['sender'],
                'host': row['host'],
                'port': row['port'],
                'tls': row['tls'] == "encrypt",
                'username': row['username'],
                'has_password': True if row['password'] != '' else False,
                'enabled': row['enabled'] == 1
            })
        elif row['dest'] is not None:
            recipient = row['dest']
            if recipient == '*':
                has_wildcard = True
            relays.append({
                'recipient': row['dest'],
                'host': row['host'],
                'port': row['port'],
                'tls': row['tls'] == "encrypt",
                'username': row['username'],
                'has_password': True if row['password'] != '' else False,
                'enabled': row['enabled'] == 1
            })
except OperationalError:
    relays = []
output= {"has_wildcard": has_wildcard, "rules": relays}
json.dump(output, fp=sys.stdout)
