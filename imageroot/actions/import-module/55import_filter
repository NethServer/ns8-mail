#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import os
import json
import agent
import mail
import sqlite3

# Global stdout redirection:
sys.stdout = sys.stderr

sdb = mail.pcdb_connect()
sdb.set_trace_callback(lambda m: print(agent.SD_DEBUG + m))

jrspamd = json.load(open('rspamd.json'))
jpostfix = json.load(open('postfix.json'))

maps = {
    'bypass_sender.map': '',
    'bypass_sender_domain.map': '',
    'bypass_recipient.map': '',
    'bypass_recipient_domain.map': '',
    'bypass_ip.map': '',
}

for ebypass in list(filter(None, jrspamd['props'].get('SenderWhiteList','').split(','))):
    if '@' in ebypass:
        maps['bypass_sender.map'] += ebypass + "\n"
    else:
        maps['bypass_sender_domain.map'] += ebypass + "\n"

for ebypass in list(filter(None, jrspamd['props'].get('RecipientWhiteList','').split(','))):
    if '@' in ebypass:
        maps['bypass_recipient.map'] += ebypass + "\n"
    else:
        maps['bypass_recipient_domain.map'] += ebypass + "\n"

with sdb:
    cur = sdb.cursor()
    for ebypass in list(filter(None, jpostfix['props'].get('AccessBypassList','').split(','))):
        maps['bypass_ip.map'] += ebypass + "\n"
        try:
            cur.execute("""INSERT INTO mynetworks (network) VALUES (?)""", (ebypass,))
        except sqlite3.Error as iex:
            print(agent.SD_WARNING + f"Skipping open relay policy for IP {ebypass}:", iex)

for map_name, payload in maps.items():
    if payload:
        print(agent.SD_INFO + "Set bypass map " + map_name + ":", payload.replace('\n', ', '), file=sys.stderr)
        mail.rspamd_api_set_map_raw(map_name, payload)
