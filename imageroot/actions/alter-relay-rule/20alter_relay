#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import mail
import agent
from sqlite3 import IntegrityError

class RelayNotFoundError(Exception):
    pass

request = json.load(sys.stdin)

sdb = mail.pcdb_connect()

sender = request.get('sender')
recipient = request.get('recipient')

try:
    cur = sdb.cursor()

    if sender:
        if 'host' in request:
            cur.execute("""UPDATE relayrules SET host=? WHERE sender=?""", (request['host'], sender))

        if 'port' in request:
            cur.execute("""UPDATE relayrules SET port=? WHERE sender=?""", (request['port'], sender))

        if 'mandatory_tls' in request:
            cur.execute("""UPDATE relayrules SET tls=? WHERE sender=?""", ('encrypt' if request['mandatory_tls'] else 'may', sender))

        if 'username' in request:
            cur.execute("""UPDATE relayrules SET username=? WHERE sender=?""", (request['username'], sender))

        if 'password' in request:
            cur.execute("""UPDATE relayrules SET password=? WHERE sender=?""", (request['password'], sender))

        if 'enabled' in request:
            cur.execute("""UPDATE relayrules SET enabled=? WHERE sender=?""", (1 if request['enabled'] else 0, sender))

        if 'description' in request:
            cur.execute("""UPDATE relayrules SET rdesc=? WHERE sender=?""", (request['description'], sender))

    elif recipient:
        if 'host' in request:
            cur.execute("""UPDATE relayrules SET host=? WHERE dest=?""", (request['host'], recipient))

        if 'port' in request:
            cur.execute("""UPDATE relayrules SET port=? WHERE dest=?""", (request['port'], recipient))

        if 'mandatory_tls' in request:
            cur.execute("""UPDATE relayrules SET tls=? WHERE dest=?""", ('encrypt' if request['mandatory_tls'] else 'may', recipient))

        if 'username' in request:
            cur.execute("""UPDATE relayrules SET username=? WHERE dest=?""", (request['username'], recipient))

        if 'password' in request:
            cur.execute("""UPDATE relayrules SET password=? WHERE dest=?""", (request['password'], recipient))

        if 'enabled' in request:
            cur.execute("""UPDATE relayrules SET enabled=? WHERE dest=?""", (1 if request['enabled'] else 0, recipient))

        if 'description' in request:
            cur.execute("""UPDATE relayrules SET rdesc=? WHERE dest=?""", (request['description'], recipient))

    if cur.rowcount == 0:
        raise RelayNotFoundError()

except RelayNotFoundError:
    sdb.rollback()
    agent.set_status('validation-failed')

    if sender:
        json.dump([{'field': 'sender', 'parameter': 'sender', 'value': sender, 'error':'relay_not_found'}], fp=sys.stdout)
    elif recipient:
        json.dump([{'field': 'recipient', 'parameter': 'recipient', 'value': recipient, 'error':'relay_not_found'}], fp=sys.stdout)
    sys.exit(2)

else:
    sdb.commit()

finally:
    sdb.close()
