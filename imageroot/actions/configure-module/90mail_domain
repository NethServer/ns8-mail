#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import os
import agent
import mail

request = json.load(sys.stdin)
if not 'mail_domain' in request:
    # Not in first configuration? Exit here.
    sys.exit(0)

sdb = mail.pcdb_connect()
needs_reload = False
with sdb:
    vals = {
        'domain': request['mail_domain'],
        'addusers': 1,
    }
    cur = sdb.cursor()
    if cur.execute("SELECT COUNT(*) FROM domains WHERE domain != '*'").fetchone()[0] == 0:
        # If the postmaster wildcard destination is at its default, create
        # "postmaster" public mailbox and set as alias destination.
        try:
            # Create postmaster public mailbox, with no ACLs
            mail.doveadm_query("mailboxCreate", {"mailbox": ["postmaster"], "user": "vmail"})
        except mail.DoveadmError as dex:
            if dex.code != 65: # ignore error if mailbox already exists
                raise
        cur.execute("UPDATE destmap SET dest=? WHERE alocal='postmaster' AND domain='*' AND dest='postmaster'", ('vmail+postmaster',))
        print(agent.SD_DEBUG + f"Creating initial domain {vals['domain']}", file=sys.stderr)
        cur.execute("INSERT INTO domains (domain,addusers) VALUES (:domain,:addusers)", vals)
        needs_reload = True
sdb.close()

if needs_reload:
    agent.run_helper('systemctl', '--user', 'reload', 'postfix')
