#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import os

node_id = int(os.environ['NODE_ID'])
agent_id = os.environ['AGENT_ID']
module_uuid = os.environ['MODULE_UUID']
udomname = os.environ['POSTFIX_ORIGIN']

with agent.redis_connect() as rdb:
    node_address = rdb.hget(f'node/{node_id}/vpn', 'ip_address')

# Create srv records in Redis for service discovery
with agent.redis_connect(privileged=True) as prdb:
    trx = prdb.pipeline()

    kimap = agent_id + "/srv/tcp/imap"
    trx.delete(kimap).hset(kimap, mapping={
        "port": "143",
        "host": node_address,
        "node": str(node_id),
        "user_domain": udomname,
        "module_uuid": module_uuid,
    })

    ksubmission = agent_id + "/srv/tcp/submission"
    trx.delete(ksubmission).hset(ksubmission, mapping={
        "port": "587",
        "host": node_address,
        "node": str(node_id),
        "user_domain": udomname,
        "module_uuid": module_uuid,
    })

    # Publish change event
    trx.publish(agent_id + "/event/mail-settings-changed", json.dumps({
        "reason": os.getenv("AGENT_TASK_ACTION", "unknown"),
        "module_id": os.environ['MODULE_ID'],
        "node_id": node_id,
        "module_uuid": module_uuid,
    }))

    trx.execute()
