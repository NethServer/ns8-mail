#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import os
import socket
import string
import secrets
from agent.ldapproxy import Ldapproxy

def genpw():
    """Generate a random token"""
    alphabet = string.ascii_letters + string.digits + '%@-+_^,./'
    return ''.join([secrets.choice(alphabet) for i in range(32)])

request = json.load(sys.stdin)
udomname = request['user_domain']
hostname = request['hostname']

with agent.redis_connect() as rdb:
    cluster_network = rdb.get('cluster/network') or ""

if not os.path.exists('rspamd.env'):
    # First-time configuration defaults
    agent.set_env('RSPAMD_instance', os.environ['MODULE_ID'])
    agent.set_env('POSTFIX_MILTERS', 'inet:localhost:11332')
    spamt_pass = genpw()
    oldmask = os.umask(0o77)
    with open('rspamd.env', 'w') as fenv:
        print('RSPAMD_adminpw=' + genpw(), file=fenv)
        print('RSPAMD_spamtpw=' + spamt_pass, file=fenv)

    with open('dovecot.env', 'w') as fenv:
        print("DOVECOT_API_KEY=" + genpw(), file=fenv)
        print("DOVECOT_VMAIL_PASS=" + genpw(), file=fenv)
        print("DOVECOT_SPAMT_PASS=" + spamt_pass, file=fenv)
    os.umask(oldmask)

if not 'DOVECOT_QUOTA_MB' in os.environ:
    # First configuration default settings
    agent.set_env('DOVECOT_QUOTA_MB', "0") # Enable quota with no limit
    agent.set_env('DOVECOT_SPAM_RETENTION', "15") # Enable the feature with 15 days retention
    agent.set_env('DOVECOT_SPAM_FOLDER', 'Junk') # Default spam folder name, enabled
    agent.set_env('DOVECOT_SPAM_SUBJECT_PREFIX', '') # Default spam subject prefix: empty - disabled

agent.set_env('MAIL_HOSTNAME', hostname)
agent.set_env('DOVECOT_INSTANCE_NAME', os.environ['MODULE_ID'])
if not os.getenv('DOVECOT_TRUSTED_NETWORKS'):
    agent.set_env('DOVECOT_TRUSTED_NETWORKS', cluster_network)

agent.set_env('POSTFIX_SYSLOG_NAME', os.environ['MODULE_ID'])
if not os.getenv('POSTFIX_TRUSTED_NETWORK'):
    agent.set_env('POSTFIX_TRUSTED_NETWORK', cluster_network)
agent.set_env('POSTFIX_HOSTNAME', hostname)
agent.set_env('POSTFIX_ORIGIN', udomname)
