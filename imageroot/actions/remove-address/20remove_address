#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import mail

class AddressNotFoundError(Exception):
    pass

request = json.load(sys.stdin)

sdb = mail.pcdb_connect()

local = request['local']
if request['atype'] == "domain":
    domain = request['domain']
elif request['atype'] == "wildcard":
    domain = "*"
else:
    raise Exception(f"Unexpected atype {request['atype']} value")

# RFC-mandatory address, cannot be deleted.
if local == "postmaster" and domain == "*":
    agent.set_status('validation-failed')
    json.dump([{'field':'local', 'parameter':'local','value': 'postmaster', 'error':'address_removal_forbidden'}], fp=sys.stdout)
    sys.exit(3)

try:
    cur = sdb.cursor()
    cur.execute("""DELETE FROM addresses WHERE alocal=? AND domain=?""", (local, domain,))
    if cur.rowcount == 0:
        raise AddressNotFoundError

    cur.execute("""DELETE FROM destmap WHERE alocal=? AND domain=?""", (local, domain,))
    if cur.rowcount == 0:
        raise AddressNotFoundError

except AddressNotFoundError:
    sdb.rollback()
    agent.set_status('validation-failed')
    json.dump([{'field':'local', 'parameter':'local','value': request['local'], 'error':'address_not_found'}], fp=sys.stdout)
    sys.exit(2)

else:
    sdb.commit()
finally:
    sdb.close()
