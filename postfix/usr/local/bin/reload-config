#!/bin/ash

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

# shellcheck shell=dash disable=SC2034
# https://www.shellcheck.net/wiki/SC2034

set -e

ldap_schema=${POSTFIX_LDAP_SCHEMA:?}

pcdbquery() {
    sqlite3 -readonly -list /srv/pcdb.sqlite "${@}"
}

# Export variables for templates
set -a
if [ "$(( POSTFIX_DEBUG & 1 ))" -eq 1 ] ; then
    tmpl_debug_rewrite="-v"
fi

if [ "$(( POSTFIX_DEBUG & 2 ))" -eq 2 ] ; then
    tmpl_debug_delivery="-v"
fi

if [ "$(( POSTFIX_DEBUG & 4 ))" -eq 4 ] ; then
    tmpl_debug_relay="-v"
fi

if [ ! -d /var/lib/umail ] ; then
    echo "[WARNING] Dovecot authentication socket directory not found. SASL auth is disabled!"
    tmpl_sasl_commentout='#'
fi

S='$' # to escape $ in template

tmpl_myhostname="${POSTFIX_HOSTNAME:-$(hostname -f)}"
tmpl_vdomain="${tmpl_myhostname}.localhost"
tmpl_virtual_mailbox_domains="${tmpl_vdomain}"
tmpl_virtual_mailbox_maps="inline:{{ vmail@${tmpl_vdomain} = vmail }}, "'proxy:ldap:$meta_directory/laddusers-origin.cf'
tmpl_verify_recipient_address="check_recipient_access inline:{{ ${tmpl_vdomain} = reject_unverified_recipient }}"


tmpl_milters="${POSTFIX_MILTERS}"
tmpl_mynetworks="127.0.0.1/32 ${POSTFIX_TRUSTED_NETWORK}"
tmpl_debug_peer_list="${POSTFIX_DEBUG_PEERS:-\$mynetworks}"
tmpl_relay_domains=$(pcdbquery "SELECT group_concat(domain || '=' || transport) FROM domains WHERE transport LIKE '_mtp:%'")
tmpl_virtual_alias_domains=$(pcdbquery "SELECT group_concat(domain) FROM domains WHERE transport IS NULL AND domain != '*'")
tmpl_reject_internal_myorigin="check_recipient_access inline:{{ ${tmpl_vdomain} = REJECT access denied }}"
tmpl_domain_catchall_map=$(pcdbquery "SELECT 'inline:{' || group_concat('{@' || domain || '=' || catchall || '@${tmpl_vdomain}}', ', ') || '}' FROM domains WHERE length(catchall) > 0 AND domain != '*'")
tmpl_laddgroups_domains=$(pcdbquery "SELECT group_concat(domain, ' ') FROM (SELECT domain FROM domains WHERE addgroups = 1 UNION SELECT '${tmpl_vdomain}' AS domain)")
tmpl_laddusers_domains=$(pcdbquery "SELECT group_concat(domain, ' ') FROM (SELECT domain FROM domains WHERE addusers = 1 UNION SELECT '${tmpl_vdomain}' AS domain)")
tmpl_ldap_bind_dn="${POSTFIX_LDAP_USER}"
tmpl_ldap_bind_pw="${POSTFIX_LDAP_PASS}"
tmpl_ldap_host="${POSTFIX_LDAP_HOST}"
tmpl_ldap_port="${POSTFIX_LDAP_PORT}"
tmpl_ldap_base="${POSTFIX_LDAP_BASE}"
tmpl_maximal_queue_lifetime="${POSTFIX_MAXIMAL_QUEUE_LIFETIME:-120}"
if [ -n "${POSTFIX_RESTRICTED_SENDER}" ]; then
    tmpl_sender_restrictions="reject_authenticated_sender_login_mismatch"
else
    tmpl_sender_restrictions=""
fi
tmpl_always_bcc="${POSTFIX_ALWAYS_BCC}"
tmpl_default_transport=$(pcdbquery "SELECT transport FROM relayrules WHERE enabled=1 AND rule_type='wildcard' AND rule_subject='*'")
if [ -z "${tmpl_default_transport}" ] ; then
    tmpl_default_transport=smtp
fi
tmpl_relayhost=$(pcdbquery "SELECT FORMAT('[%s]:%s', host, port) FROM relayrules WHERE enabled=1 AND rule_type='wildcard' AND rule_subject='*'")
set +a

envsubst >/etc/postfix/main.cf <"${TEMPLATES_DIR:?}/main.cf"
envsubst >/etc/postfix/master.cf <"${TEMPLATES_DIR:?}/master.cf"
envsubst >/etc/postfix/laddusers.cf <"${TEMPLATES_DIR:?}/laddusers-${ldap_schema}.cf"
envsubst >/etc/postfix/userforwards.cf <"${TEMPLATES_DIR:?}/userforwards.cf"
envsubst >/etc/postfix/laddgroupmembers.cf <"${TEMPLATES_DIR:?}/laddgroupmembers-${ldap_schema}.cf"
envsubst <"${TEMPLATES_DIR:?}/laddusers-${ldap_schema}.cf" | \
    sed "s/^domain = .*/domain = ${tmpl_vdomain}/ ; /^# just/ d" >/etc/postfix/laddusers-origin.cf

if [ -z "${tmpl_sasl_commentout}" ] ; then
    cat /etc/postfix/dovecot-sasl.cf >> /etc/postfix/main.cf
fi

# Append override dir contents to main.cf:
(
    echo ""
    echo "# BEGIN Included directives from /etc/postfix/main.cf.d/*.cf:"
    find /etc/postfix/main.cf.d -name '*.cf' -exec cat '{}' \;
    echo "# END Included directives from /etc/postfix/main.cf.d/*.cf:"
    echo ""
) >> /etc/postfix/main.cf

# Generate the mynetworks.cidr table
(
    echo "# This file is generated by reload-config, from mynetworks SQLite table"
    pcdbquery -tabs "SELECT network, 'OK' FROM mynetworks"
) > /etc/postfix/mynetworks.cidr

if [ -n "${POSTFIX_DEBUG}" ] ; then
    postconf -n
fi

if postfix status 2>/dev/null ; then
    postfix reload
fi
